# Simple Text Processing Pipeline
# Demonstrates basic text transformations with the current DAGwood processors

# DAG execution strategy
strategy: work_queue

# Failure handling strategy
failure_strategy: fail_fast

# Executor configuration
executor_options:
  max_concurrency: 2
  timeout_seconds: 30
  retry_attempts: 1

# Simple linear pipeline: input -> uppercase -> reverse -> add brackets
processors:
  - id: to_uppercase
    type: local
    processor: change_text_case_upper
    depends_on: []

  - id: reverse_text
    type: local
    processor: reverse_text
    depends_on: [to_uppercase]

  - id: add_brackets
    type: local
    processor: prefix_suffix_adder
    options:
      prefix: "["
      suffix: "]"
    depends_on: [reverse_text]

# Flow: input -> TO_UPPERCASE -> ESACREPPU_OT -> [ESACREPPU_OT]
