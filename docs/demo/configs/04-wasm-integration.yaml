# Demo 4: WASM Integration - Sandboxed Processing
# This demonstrates WASM processor integration with security sandboxing

strategy: work_queue
failure_strategy: fail_fast

executor_options:
  max_concurrency: 2

processors:
  # Local processor prepares input
  - id: prepare_input
    backend: local
    impl: change_text_case_lower
    depends_on: []
    options: {}

  # WASM processor provides sandboxed execution
  - id: wasm_hello_world
    backend: wasm
    module: wasm_modules/hello_world.wasm
    depends_on: [prepare_input]
    options:
      intent: transform

  # Local processor adds final formatting
  - id: final_format
    backend: local
    impl: prefix_suffix_adder
    depends_on: [wasm_hello_world]
    options:
      prefix: "ðŸ¦€ Rust + WASM: "
      suffix: " âœ¨"
