syntax = "proto3";

package processor.v1;

// Metadata from a processor (own or dependency)
message ProcessorMetadata {
  map<string, string> metadata = 1;  // Key-value metadata
}

message PipelineMetadata {
  map<string, ProcessorMetadata> metadata = 1;
}

// Request envelope for processors
message ProcessorRequest {
  bytes payload = 1;                  // opaque data (engine-defined)
  // metadata field removed - processors don't need previous metadata
}

// Structured error for uniform handling
message ErrorDetail {
  int32 code = 1;                     // app-specific error code
  string message = 2;                 // human-readable description
}

// Response envelope for processors
message ProcessorResponse {
  oneof outcome {
    bytes next_payload = 1;           // success result
    ErrorDetail error = 2;            // error result
  }
  PipelineMetadata metadata = 3; // processor's own metadata contribution
}

// Canonical processor service definition
service Processor {
  rpc Process(ProcessorRequest) returns (ProcessorResponse);
}
